{"version":3,"sources":["logo.svg","firebase.js","components/form.js","components/home.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebdb","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Form","props","handleInput","event","target","name","value","setState","handleSubmit","preventDefault","operation","state","fieldOne","fieldTwo","fieldThree","fieldFour","editingId","bind","repopulate","clearF","prevProps","this","beingEdited","console","log","registers","id","window","confirm","database","ref","child","remove","err","React","Component","Home","obj","push","set","editId","onDelete","logOut","on","snapshot","val","ide","auth","signOut","className","style","width","borderColor","onClick","Object","keys","map","idx","key","href","type","Login","submit","email","document","querySelector","password","signInWithEmailAndPassword","then","u","catch","toString","createUserWithEmailAndPassword","height","backgroundColor","alignItems","alignContent","borderRadius","paddingLeft","placeholder","htmlFor","App","user","authListener","onAuthStateChanged","background","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b125febf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCW2pzc5fJUfriKMzYOBx0URkZctU2UIpQ\",\r\n    authDomain: \"finalexam-faa56.firebaseapp.com\",\r\n    databaseURL: \"https://finalexam-faa56.firebaseio.com\",\r\n    projectId: \"finalexam-faa56\",\r\n    storageBucket: \"finalexam-faa56.appspot.com\",\r\n    messagingSenderId: \"692250976593\",\r\n    appId: \"1:692250976593:web:f9fbfb023461b1c7113370\",\r\n};\r\n// Initialize Firebase\r\nvar firebdb = firebase.initializeApp(firebaseConfig);\r\nexport default firebdb;\r\n","import React from \"react\";\r\nimport firebdb from \"../firebase\";\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editingId: \"\",\r\n            fieldOne: \"\",\r\n            fieldTwo: \"\",\r\n            fieldThree: \"\",\r\n            fieldFour: \"\",\r\n        };\r\n\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.repopulate = this.repopulate.bind(this);\r\n        this.clearF = this.clearF.bind(this);\r\n        //this.handleDeleteId = this.handleDeleteId.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.beingEdited == \"\") {\r\n            console.log(this.props.beingEdited);\r\n            console.log(\"esto esta entrando\");\r\n        } else {\r\n            if (this.props.beingEdited == prevProps.beingEdited) return;\r\n            this.setState({ editingId: this.props.beingEdited });\r\n            this.repopulate();\r\n            //this.props.beingEdited = \"\";\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        var { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.operation(this.state);\r\n        this.setState({\r\n            fieldOne: \"\",\r\n            fieldTwo: \"\",\r\n            fieldThree: \"\",\r\n            fieldFour: \"\",\r\n            editingId: \"\",\r\n        });\r\n    };\r\n\r\n    clearF() {\r\n        this.setState({\r\n            fieldOne: \"\",\r\n            fieldTwo: \"\",\r\n            fieldThree: \"\",\r\n            fieldFour: \"\",\r\n            editingId: \"\",\r\n        });\r\n    }\r\n\r\n    repopulate() {\r\n        console.log(\"ESTO ES \" + this.props.beingEdited);\r\n        this.setState({\r\n            fieldOne: this.props.registers[this.props.beingEdited].fieldOne,\r\n            fieldTwo: this.props.registers[this.props.beingEdited].fieldTwo,\r\n            fieldThree: this.props.registers[this.props.beingEdited].fieldThree,\r\n            fieldFour: this.props.registers[this.props.beingEdited].fieldFour,\r\n        });\r\n    }\r\n\r\n    onDelete(id) {\r\n        if (this.state.editingId == \"\") {\r\n            window.confirm(\r\n                \"No esta editando ningun registro, por lo que no puede eliminar\"\r\n            );\r\n        } else if (\r\n            window.confirm(\"Esta seguro que desea ELIMINAR este registro?\")\r\n        ) {\r\n            firebdb\r\n                .database()\r\n                .ref()\r\n                .child(`registers/${id}`)\r\n                .remove((err) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    } else {\r\n                        this.setState({ editingId: \"\" });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div className=\"panel panel-primary\">\r\n            //     <div className=\"panel-heading\">Contact Form</div>\r\n            //     <div className=\"panel-body\">\r\n            <form id=\"myform\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                {/* <div className=\"panel-group\"> */}\r\n                <b>First Name</b>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"John\"\r\n                        name=\"fieldOne\"\r\n                        value={this.state.fieldOne}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                </div>\r\n                {/* <div className=\"form-row\"> */}\r\n                <b>Last Name</b>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"Lee\"\r\n                        name=\"fieldTwo\"\r\n                        value={this.state.fieldTwo}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                </div>\r\n                <b>Email</b>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"lee@gmail.com\"\r\n                        name=\"fieldThree\"\r\n                        value={this.state.fieldThree}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                </div>\r\n                <b>Mobile #</b>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-phone\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"233-23333\"\r\n                        name=\"fieldFour\"\r\n                        value={this.state.fieldFour}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                </div>\r\n                {/* </div> */}\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning btn-block\"\r\n                                onClick={() => this.clearF()}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                value={\r\n                                    this.state.editingId == \"\"\r\n                                        ? \"Save\"\r\n                                        : \"Update\"\r\n                                }\r\n                                className={\r\n                                    this.state.editingId == \"\"\r\n                                        ? \"btn btn-success btn-block\"\r\n                                        : \"btn btn-primary btn-block\"\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger btn-block\"\r\n                                onClick={() =>\r\n                                    this.onDelete(this.state.editingId)\r\n                                }\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* </div> */}\r\n            </form>\r\n            //     </div>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./form\";\r\nimport firebdb from \"../firebase\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            registers: {},\r\n            beingEdited: \"\",\r\n        };\r\n\r\n        this.operation = this.operation.bind(this);\r\n        this.editId = this.editId.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n        //this.handleDeleteId = this.handleDeleteId.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebdb\r\n            .database()\r\n            .ref()\r\n            .child(\"registers\")\r\n            .on(\"value\", (snapshot) => {\r\n                if (snapshot.val() != null) {\r\n                    this.setState({ registers: snapshot.val() });\r\n                } else {\r\n                    this.setState({ registers: {} });\r\n                }\r\n            });\r\n    }\r\n\r\n    operation = (obj) => {\r\n        if (this.state.beingEdited == \"\") {\r\n            firebdb\r\n                .database()\r\n                .ref()\r\n                .child(\"registers\")\r\n                .push(obj, (err) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    } else {\r\n                        this.setState({ beingEdited: \"\" });\r\n                    }\r\n                });\r\n        } else {\r\n            firebdb\r\n                .database()\r\n                .ref()\r\n                .child(`registers/${this.state.beingEdited}`)\r\n                .set(obj, (err) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    } else {\r\n                        this.setState({ beingEdited: \"\" });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    editId(ide) {\r\n        this.setState({ beingEdited: ide });\r\n        console.log(\"SE EDITO \" + this.state.beingEdited);\r\n    }\r\n\r\n    logOut() {\r\n        firebdb.auth().signOut();\r\n    }\r\n\r\n    onDelete(id) {\r\n        if (window.confirm(\"Esta seguro que desea ELIMINAR este registro?\")) {\r\n            firebdb\r\n                .database()\r\n                .ref()\r\n                .child(`registers/${id}`)\r\n                .remove((err) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    } else {\r\n                        this.setState({ beingEdited: \"\" });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">Registro</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div\r\n                            className=\"card\"\r\n                            style={{ width: \"100%\", borderColor: \"blue\" }}\r\n                        >\r\n                            <div className=\"card-header text-white bg-primary mb-2\">\r\n                                Contact Form\r\n                            </div>\r\n\r\n                            <Form\r\n                                // operation={this.operation}\r\n                                // registers={this.state.registers}\r\n                                // editingId={this.state.beingEdited}\r\n                                {...{\r\n                                    operation: this.operation,\r\n                                    registers: this.state.registers,\r\n                                    beingEdited: this.state.beingEdited,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={this.logOut}\r\n                        >\r\n                            Sign Out\r\n                        </button>\r\n                        <table className=\"table table-borderless table-stripped\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>First Name</th>\r\n                                    <th>Last Name</th>\r\n                                    <th>Email Address</th>\r\n                                    <th>Update</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Object.keys(this.state.registers).map(\r\n                                    (id, idx) => {\r\n                                        return (\r\n                                            <tr id={id} key={id}>\r\n                                                <td>{idx + 1}</td>\r\n                                                <td>\r\n                                                    {\r\n                                                        this.state.registers[id]\r\n                                                            .fieldOne\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {\r\n                                                        this.state.registers[id]\r\n                                                            .fieldTwo\r\n                                                    }\r\n                                                </td>\r\n                                                <a\r\n                                                    href={`mailto: ${this.state.registers[id].fieldThree}`}\r\n                                                >\r\n                                                    <td>\r\n                                                        {\r\n                                                            this.state\r\n                                                                .registers[id]\r\n                                                                .fieldThree\r\n                                                        }\r\n                                                    </td>\r\n                                                </a>\r\n                                                <td>\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-warning btn-block\"\r\n                                                        onClick={() =>\r\n                                                            this.editId(id)\r\n                                                        }\r\n                                                    >\r\n                                                        Update\r\n                                                    </button>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-danger btn-block\"\r\n                                                        onClick={() =>\r\n                                                            this.onDelete(id)\r\n                                                        }\r\n                                                    >\r\n                                                        Delete\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nimport firebdb from \"../firebase\";\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.submit = this.submit.bind(this);\r\n        //this.handleDeleteId = this.handleDeleteId.bind(this);\r\n    }\r\n\r\n    submit() {\r\n        const email = document.querySelector(\"#email\").value;\r\n        const password = document.querySelector(\"#password\").value;\r\n        firebdb\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((u) => {\r\n                console.log(\"Successfully Signed Up\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error: \" + err.toString());\r\n            });\r\n    }\r\n\r\n    submitSignUp() {\r\n        firebdb\r\n            .auth()\r\n            .createUserWithEmailAndPassword(\r\n                this.state.email,\r\n                this.state.password\r\n            )\r\n            .then((u) => {\r\n                console.log(\"Successfully Signed Up\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error: \" + err.toString());\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    backgroundColor: \"#1c8ef9\",\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"col-md-8\"\r\n                    style={{\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        width: \"100%\",\r\n                    }}\r\n                >\r\n                    <form\r\n                        style={{\r\n                            backgroundColor: \"white\",\r\n                            borderRadius: \"10px\",\r\n                            alignItems: \"center\",\r\n                            alignContent: \"center\",\r\n                            paddingLeft: \"10%\",\r\n                        }}\r\n                    >\r\n                        <h3>Sign In</h3>\r\n\r\n                        <div\r\n                            className=\"form-group\"\r\n                            style={{\r\n                                width: \"80%\",\r\n                                alignItems: \"center\",\r\n                                alignContent: \"center\",\r\n                                paddingLeft: \"10%\",\r\n                            }}\r\n                        >\r\n                            <label>Email address</label>\r\n                            <input\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"form-group\"\r\n                            style={{\r\n                                width: \"80%\",\r\n                                alignItems: \"center\",\r\n                                alignContent: \"center\",\r\n                                paddingLeft: \"10%\",\r\n                            }}\r\n                        >\r\n                            <label>Password</label>\r\n                            <input\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"form-group\"\r\n                            style={{\r\n                                width: \"80%\",\r\n                                alignItems: \"center\",\r\n                                alignContent: \"center\",\r\n                                paddingLeft: \"10%\",\r\n                            }}\r\n                        >\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customCheck1\"\r\n                                />\r\n                                <label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customCheck1\"\r\n                                >\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                            style={{ width: \"80%\", paddingLeft: \"10%\" }}\r\n                            onClick={this.submit}\r\n                        >\r\n                            Sign In\r\n                        </button>\r\n\r\n                        <p className=\"forgot-password text-right\">\r\n                            Forgot <a href=\"#\">password?</a>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/home\";\r\nimport Login from \"./components/login\";\r\nimport firebdb from \"./firebase\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: null,\r\n        };\r\n\r\n        this.authListener = this.authListener.bind(this);\r\n        //this.handleDeleteId = this.handleDeleteId.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.authListener();\r\n    }\r\n\r\n    authListener() {\r\n        firebdb.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.setState({ user });\r\n            } else {\r\n                this.setState({ user: null });\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"col-12\"\r\n                style={{ width: \"100%\", height: \"100%\", background: \"white\" }}\r\n            >\r\n                {this.state.user ? <Home /> : <Login />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}